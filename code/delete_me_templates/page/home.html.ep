% my $ws_url = $self->req->url->to_abs->scheme($self->req->is_secure ? 'wss' : 'ws')->path('/ws');
% my $url = $self->req->url->to_abs;

<!doctype html><html>
    <head>
        <title>Space Bot War</title>
        <meta charset="utf-8" />
        <script type="text/javascript" src="/assets/jquery-2.0.3.min.js"></script>
        <script type="text/javascript" src="/jquery.json.min.js"></script>
%= javascript '/assets/bootstrap/js/bootstrap.js'
%= stylesheet '/assets/bootstrap/css/bootstrap.css'
%= stylesheet '/assets/bootstrap/css/bootstrap-theme.css'
%= humane_include
        <script type="text/javascript" src="/room.js"></script>
        <style type="text/css">
        <!--
        body {
            background-color: #ededed;
        }
        #icydee_canvas {
            background: #fff;
            border: 1px;
            solid : #cbcbcb;
        }
        -->
        </style>
        <script>

$(document).ready(function() {
    $('#arena').room({"url" : "<%= $ws_url %>"});
    var canvas = document.getElementById("icydee_canvas");
    context = canvas.getContext('2d');
    imageObj = new Image();
    imageObj.onLoad = function() {
    };
    imageObj.src = '/sp_ship.png';
    bgImage = new Image();
    bgImage.src = '/starfield.png';
    bgImage.onLoad = function() {};

    arena = new Arena({
        width   : 500,
        height  : 500,
        ships   : new Array()
    });
    arena.render();
});

(function() {
    var lastTime = 0;
    var vendors = ['ms', 'moz', 'webkit', 'o'];
    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];
        window.cancelRequestAnimationFrame = window[vendors[x]+
          'CancelRequestAnimationFrame'];
    }

    if (!window.requestAnimationFrame)
        window.requestAnimationFrame = function(callback, element) {
            var currTime = new Date().getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = window.setTimeout(function() { callback(currTime + timeToCall); }, 
              timeToCall);
            lastTime = currTime + timeToCall;
            return id;
        };

    if (!window.cancelAnimationFrame)
        window.cancelAnimationFrame = function(id) {
            clearTimeout(id);
        };
}())

var context;
var arena;
var imageObj;
var bgImage;
var date = new Date();
var init_t = -1;

function Ship(args) {
    this.x              = args.x,
    this.y              = args.y,
    this.direction      = args.direction,
    this.speed          = args.speed,
    this.rotation       = args.rotation,
    this.orientation    = args.orientation,
    this.status         = args.status,
    this.health         = args.health,
    this.init_t         = args.init_t
    var self = this;

    this.render=function() {
        var date = new Date();
        var now_t = date.getTime();
        var duration = now_t - this.init_t;
        var frac = duration / (this.init_t - this.prev_t);
        var delta_x = (this.x - this.prev_x) * frac;
        var delta_y = (this.y - this.prev_y) * frac;
        var delta_o = (this.orientation - this.prev_orientation);
        if (delta_o > Math.PI) {
            delta_o = delta_o - Math.PI * 2;
        }
        if (delta_o < 0-Math.PI) {
            delta_o = delta_o + Math.PI * 2;
        }
        delta_o = delta_o * frac;

        context.save();
        context.translate(this.prev_x + delta_x, this.prev_y + delta_y);
        context.rotate(0 + this.prev_orientation + delta_o);
        context.drawImage(imageObj, -35, -25);
        context.restore();
    }
};


function Arena(args) {
    this.ships  = args.ships;
    this.width  = args.width;
    this.height = args.height;
    this.time   = args.time;
    var self = this;

    this.render=function() {
        context.clearRect(0, 0, self.width, self.height);
        context.drawImage(bgImage,0,0);

        context.beginPath();
        context.fillStyle="#000066";

        for (var i in self.ships) {
            self.ships[i].render();
        }
        requestAnimationFrame(self.render);
    }

};



        </script>
    </head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="#">Space Bot War</a>
        </div>
        <div class="navbar-collapse collapse">
          <form class="navbar-form navbar-right"  method="get" action="/register" id="register">
            <button type="submit" class="btn btn-success">Register</button>
          </form>
          <form class="navbar-form navbar-right"  method="post" action="/login" id="login">
            <input type="hidden" name="from_url" id="from_url" value="<%= $url %>">
            <div class="form-group">
              <input name="username" id="username" type="text" placeholder="Username" class="form-control">
            </div>
            <div class="form-group">
              <input name="password" id="password" type="password" placeholder="Password" class="form-control">
            </div>
            <button type="submit" class="btn btn-success">Sign in</button>
          </form>
        </div><!--/.navbar-collapse -->
      </div>
    </div>


<div class="container">
  <div class="page-header">
    <h1><%= content_for 'banner' %></h1>
  </div>
  <div class="row">
    <div class="span10" id="content">
        <div class="container">
        <h2>Space Bot War</h2>
    
        <p>In the 31st Century mankind is exploring the galaxy, but the risk of being attacked by aliens or pirates is so great that 
        spacecraft are unmanned and fully automated.</p>

        <p>Spacecraft (now called Spacebots) are pre-programmed to perform their actions. In the event of attack by enemies the Spacebots with the best program will
        usually win. Spacebot programmers are highly paid and regarded by society in the same way as princes or pop-stars were centuries earlier.</p>

        <p>The training for Spacebot programmers is relatively simple, but competition for these places is intense. Weekly tournaments are run where 
        the best spacebots compete against each other to determine their rank.</p>

        <h3>Coming Soon</h3>

        <p>This game is still in a pre-alpha state and is not yet open for membership</p>

        <p>the following is a demonstration which will (soon) demonstrate two fleets of ships competing against each other</p>

        <p>Space Bot War is inspired by the 1970's game RobotWar (see <a href="http://en.wikipedia.org/wiki/Robotwar" target="_blank">Wikipedia</a>)</p>

            <table border="1" height="100%" style="margin:auto">
                <tr>
                    <td style="vertical-align:middle">
                        <div id="arena"></div>
                    </td>
                    <td><div id="debug"></div></td>
                </tr>
            </table>
        </div>
        <canvas id="icydee_canvas" width="500" height="500"></canvas>
    </div>
  </div>
</div>

</body>


