=head1 Game Lobby

All methods in this section can be carried out by a connection to the B<game/lobby>
route.

=head2 Sessions

A session ID is used to identify the client to the server. A session ID
is initially provided by the server and this should be retained by the client and used in
every subsequent Web Socket call to the server.






=head2 Server : lobby_status

A B<connection_status> will be sent by the Game Lobby shortly after the user has
made a connection or in the case where the lobby status changes.

{
    "code"      : 0,
    "message"   : "Welcome to the Game Lobby",
}

=head3 code

The numeric code representing the B<lobby_status> where B<0> represents success
and any other value indicates a fault.

=head3 message

A message from the server, for example the time at which the server is expected
to be available again.





=head3 session

Session variables are used to link identify every message sent by the client with
a particular user (or guest if the user has not yet logged in or registered.

A new unique session ID is provided by the server every time a new connection is
made from a client.

The client should only use this

A session variable is provided by the lobby. This session ID should be included
in all subsequent messages to the server.


=head2 Client : login_with_session

In the event that a user has logged in previously, they will have been given a
session ID. If this session ID is still current (within say 2 hours) then the
user can log in with this session ID.



=head2 Client : register

Send a registration message from the Client to the server.

    {
        "username"  : "james_bond",
        "password"  : "tops3cret",
        "email"     : "agent007@mi6.gov.co.uk",
        "id"        : "james_bond",
    }

On registering you will be sent an email which allows you to confirm your email
address. In the email will be a link which you need to follow. On clicking the
link it will verify your email address and unlock your account.

=head3 username (required)

The name you will use to log into the site. This must be at least 3 charaters long
and may consist of letters, numbers or punctuation.

=head3 password (required)

The password to authenticate you to the server. At least one upper-case character,
one lower-case character and either a numeric or punctuation character. The password
must also be at least 5 characters long.

=head3 email (required)

Your email address. You will not be able to log onto the server until your email
address has been verified. We will send a message with instructions on how to log
in to this email address, so make sure it is correct.

=head3 id (optional)

An ID to identify this message so you can tie up the server response to this request.

=head3 RESPONSE

The server will send a B<Server : register> message with the success or failure
of this call.




=head2 Server : register

Returns B<code> B<id> and B<message> (see L<intro.pod>)

The B<data> returned is the username.




=head2 Client : confirm_email

A validation code to confirm the users email address

    {
        "email_code"    : "1234-ABCD-5678-EF01",
        "id"            : 345,
    }

=head3 code (required)

The validation code given to you in your email message.

=head3 id (optional)

An ID to identify this message so you can tie up the server response to this request.

=head3 RESPONSE

The server will send a B<Server : confirm_email> message with the success or
failure of this call.




=head2 Server : confirm_email

    {
        "code"          : 0,
        "message"       : 'Logged in',
        "name"          : 'james_bond',
    }

Returns B<code> B<id> and B<message> like any other server status message.

=head3 name

The users username.





Returns B<code> B<id> and B<message> (see L<intro.pod>)

If the status is success, then the user will be logged on to the server.




=head2 Client : login_with_password

A client request to authenticate and to log into the server by means of
username and password

    {
        "username"  : "james_bond",
        "password"  : "tops3cret",
        "id"        : "james_bond",
    }

=head3 username (required)

The username you used during registration.

=head3 password (required)

The password you use to access your account.

=head3 id (optional)

Unique ID to identify the return message

=head3 RESPONSE

The Server will respond with a B<Server : login_with_password> message




=head2 Server : login_with_password

Returns B<code> B<id> and B<message> (see L<intro.pod>)

If the status is success, then the user will be logged on to the server.




=head2 Client : rooms

A client request to obtain the rooms which are available to join.

    {
        "id"            : "123",
        "continuous"    : "1",
    }
i
=head3 id (optional)

Unique ID to identify the return message;

=head3 continuous (optional)

If specified, and if set to B<1> will cause the server to send continuous
updates whenever the rooms status changes.

To stop continuous messages from the server send a B<Client : rooms> message
with B<continuous> set to B<0> or omitted altogether.

=head3 RESPONSE

The server will respond with a B<Server : rooms> message




=head2 Server : rooms

A B<Server : rooms> message will be sent after a B<Client : rooms> request or
on a continuous basis (whenever there is a change) if selected by the client.

    {
        "rooms" : [
            {
            "room"      : "//spacebotwar.com/ws/game/zone1",
            "users"     : 113,
            "status"    : "open",
            },
            {
    }
i
=head3 id (optional)

Unique ID to identify the return message;

=head3 continuous (optional)

If specified, and if set to B<1> will cause the server to send continuous
updates whenever the rooms status changes.

To stop continuous messages from the server send a B<Client : rooms> message
with B<continuous> set to B<0> or omitted altogether.

=head3 RESPONSE

The server will respond with a B<Server : rooms> message



